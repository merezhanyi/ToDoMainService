openapi: 3.0.0
info:
  version: '1'
  title: 'ToDoMainService'
  license:
    name: MIT
servers:
  - url: 'localhost:8080'
paths:
  /api/v1/tasks/:
    post:
      summary: 'Creates new task'
      operationId: createTask
      tags:
        - task
      parameters: []
      responses:
        '200':
          description: 'Confirmation that a new task was created: Details about a task ID'
          headers:
            x-next:
              description: new task ID
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/tasks/:
    get:
      summary: 'Returns list of tasks'
      operationId: findTasks
      tags:
        - task
      parameters:
        - name: page
          in: query
          description: page number (10 each)
          required: false
          schema:
            type: integer
            format: integer
        - name: sort
          in: query
          description: sort type (asc/desc)
          required: false
          schema:
            type: string
            format: string
        - name: field
          in: query
          description: sort by the field (id,description,dateTime)
          required: false
          schema:
            type: string
            format: string
      responses:
        '200':
          description: 'List of tasks'
          headers:
            x-next:
              description: List of tasks
              schema:
                type: array
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/tasks/{id}:
    get:
      summary: 'Returns a specific task'
      operationId: findTask
      tags:
        - task
      parameters:
        - name: id
          in: query
          description: task ID
          required: true
          schema:
            type: integer
            format: long
      responses:
        '200':
          description: 'A specific task'
          headers:
            x-next:
              description: A specific task
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/tasks/{id}:
    put:
      summary: 'Updates a specific task'
      operationId: updateTask
      tags:
        - task
      parameters:
        - name: id
          in: query
          description: task ID
          required: true
          schema:
            type: integer
            format: long
      responses:
        '200':
          description: 'Confirmation that a task was updated'
          headers:
            x-next:
              description: ID of updated task
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/tasks/{id}:
    delete:
      summary: 'Deletes a specific task'
      operationId: deleteTask
      tags:
        - task
      parameters:
        - name: id
          in: query
          description: task ID
          required: true
          schema:
            type: integer
            format: long
      responses:
        '200':
          description: 'Confirmation that a task was deleted'
          headers:
            x-next:
              description: ID of deleted task
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Task:
      type: object
      required:
        - id
        - description
        - done
        - dateTime
      properties:
        id:
          type: integer
          format: long
        description:
          type: string
        isDone:
          type: boolean
        dateTime:
          type: string
          format: dateTime
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
security:
  - BasicAuth: []